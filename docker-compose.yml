services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    command: ["mongod", "--bind_ip_all", '--port', '27017']
    networks:
      - kafka-network
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server
    volumes:
      - redis_data:/data
    networks:
      - kafka-network

  backend:
    image: reddit-api
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - mongodb
      - redis
    networks:
      - kafka-network

  frontend:
    image: frontend
    container_name: frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - kafka-network


volumes:
  mongodb_data:
  redis_data:

networks:
  kafka-network:
    driver: bridge
